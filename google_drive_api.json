openapi: 3.1.0
info:
  title: Google Drive API
  version: v3
  description: API for interacting with Google Drive, focusing on reading and writing text files and simple Google documents.
  contact:
    name: Google
    url: https://developers.google.com/drive
servers:
  - url: https://www.googleapis.com/drive/v3
paths:
  /files:
    get:
      summary: Lists or searches files
      description: Lists or searches files in the user's Google Drive.
      operationId: listFiles
      parameters:
        - name: q
          in: query
          required: false
          description: A query for filtering the file results.
          schema:
            type: string
        - name: fields
          in: query
          required: false
          description: The fields to include in the response.
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
    post:
      summary: Creates a new file
      description: Creates a new file in Google Drive.
      operationId: createFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
  /files/{fileId}:
    get:
      summary: Gets a file's metadata or content
      description: Gets a file's metadata or content by ID.
      operationId: getFile
      parameters:
        - name: fileId
          in: path
          required: true
          description: The ID of the file.
          schema:
            type: string
        - name: alt
          in: query
          required: false
          description: Whether to return metadata or content.
          schema:
            type: string
            enum: [json, media]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
            text/plain:
              schema:
                type: string
    put:
      summary: Updates a file's metadata or content
      description: Updates a file's metadata or content.
      operationId: updateFile
      parameters:
        - name: fileId
          in: path
          required: true
          description: The ID of the file to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'

components:
  schemas:
    FileList:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/File'
    File:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        mimeType:
          type: string
        description:
          type: string
        createdTime:
          type: string
          format: date-time
        modifiedTime:
          type: string
          format: date-time
        content:
          type: string
