{
  "openapi": "3.1.0",
  "info": {
    "title": "Google Calendar API",
    "version": "v3",
    "description": "API for interacting with Google Calendar, focusing on retrieving, creating, and updating calendar events.",
    "contact": {
      "name": "Google",
      "url": "https://developers.google.com/calendar"
    }
  },
  "servers": [
    {
      "url": "https://www.googleapis.com/calendar/v3"
    }
  ],
  "paths": {
    "/calendars/{calendarId}/events": {
      "get": {
        "summary": "Retrieves events from the specified calendar within a specified time range",
        "description": "Returns events on the specified calendar within the given time range.",
        "operationId": "getEvents",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "required": true,
            "description": "Calendar identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeMin",
            "in": "query",
            "required": false,
            "description": "Lower bound (inclusive) for an event's start time to filter by.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "timeMax",
            "in": "query",
            "required": false,
            "description": "Upper bound (exclusive) for an event's end time to filter by.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of calendar events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventList"
                }
              }
            }
          },
          "404": {
            "description": "Calendar not found"
          }
        }
      },
      "post": {
        "summary": "Creates a new event in the specified calendar",
        "description": "Creates a new event in the specified calendar.",
        "operationId": "createEvent",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "required": true,
            "description": "Calendar identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conferenceDataVersion",
            "in": "query",
            "required": false,
            "description": "Version number of conference data supported by the API client.",
            "schema": {
              "type": "integer",
              "enum": [0, 1]
            }
          },
          {
            "name": "maxAttendees",
            "in": "query",
            "required": false,
            "description": "The maximum number of attendees to include in the response.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sendNotifications",
            "in": "query",
            "required": false,
            "description": "Deprecated. Please use sendUpdates instead. Whether to send notifications about the creation of the new event.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sendUpdates",
            "in": "query",
            "required": false,
            "description": "Whether to send notifications about the creation of the new event.",
            "schema": {
              "type": "string",
              "enum": ["all", "externalOnly", "none"]
            }
          },
          {
            "name": "supportsAttachments",
            "in": "query",
            "required": false,
            "description": "Whether API client performing operation supports event attachments.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "Event object that needs to be added to the calendar",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Calendar not found"
          }
        }
      }
    },
    "/calendars/{calendarId}/events/{eventId}": {
      "put": {
        "summary": "Updates an event in the specified calendar",
        "description": "Updates an event in the specified calendar. This method does not support patch semantics and always updates the entire event resource.",
        "operationId": "updateEvent",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "required": true,
            "description": "Calendar identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "description": "Event identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alwaysIncludeEmail",
            "in": "query",
            "required": false,
            "description": "Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "conferenceDataVersion",
            "in": "query",
            "required": false,
            "description": "Version number of conference data supported by the API client.",
            "schema": {
              "type": "integer",
              "enum": [0, 1]
            }
          },
          {
            "name": "maxAttendees",
            "in": "query",
            "required": false,
            "description": "The maximum number of attendees to include in the response.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sendNotifications",
            "in": "query",
            "required": false,
            "description": "Deprecated. Please use sendUpdates instead. Whether to send notifications about the event update.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sendUpdates",
            "in": "query",
            "required": false,
            "description": "Guests who should receive notifications about the event update.",
            "schema": {
              "type": "string",
              "enum": ["all", "externalOnly", "none"]
            }
          },
          {
            "name": "supportsAttachments",
            "in": "query",
            "required": false,
            "description": "Whether API client performing operation supports event attachments.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "Event object that needs to be updated in the calendar",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Calendar or event not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EventList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "start": {
            "type": "object",
            "properties": {
              "dateTime": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "end": {
            "type": "object",
            "properties": {
              "dateTime": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  }
}
